version: '3'

services:

  zammad-proxy:
    image: cybergatelabs/letsencrypt
    container_name: zammad-proxy
    hostname: zammad-proxy
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - URL=${URL}
      - SUBDOMAINS=${SUBDOMAINS},
      - EXTRA_DOMAINS=${EXTRA_DOMAINS}
      - VALIDATION=${VALIDATION}
      - EMAIL=${EMAIL}
      - DHLEVEL=${DHLEVEL}
      - ONLY_SUBDOMAINS=${ONLY_SUBDOMAINS}
      - STAGING=${STAGING}
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./data/letsencrypt/config:/config
    networks:
     - zammd-network     

  zammad-backup:
    command: ["zammad-backup"]
    depends_on:
      - zammad-railsserver
    entrypoint: /usr/local/bin/backup.sh
    image: ${IMAGE_REPO}:zammad-postgresql${VERSION}
    container_name: zammad-backup
    hostname: zammad-backup
    links:
      - zammad-postgresql
    restart: ${RESTART}
    volumes:
      - zammad-backup:/var/tmp/zammad
      - zammad-data:/opt/zammad
    networks:
     - zammd-network

  zammad-elasticsearch:
    image: ${IMAGE_REPO}:zammad-elasticsearch${VERSION}
    container_name: zammad-elasticsearch
    hostname: zammad-elasticsearch
    restart: ${RESTART}
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
     - zammd-network

  zammad-init:
    command: ["zammad-init"]
    depends_on:
      - zammad-postgresql
    image: ${IMAGE_REPO}:zammad${VERSION}
    container_name: zammad-init
    hostname: zammad-init
    links:
      - zammad-elasticsearch
      - zammad-postgresql
    restart: on-failure
    volumes:
      - zammad-data:/opt/zammad
    networks:
     - zammd-network

  zammad-memcached:
    command: ["zammad-memcached"]
    image: ${IMAGE_REPO}:zammad-memcached${VERSION}
    container_name: zammad-memcached
    hostname: zammad-memcached
    restart: ${RESTART}
    networks:
     - zammd-network

  zammad-nginx:
    command: ["zammad-nginx"]
    depends_on:
      - zammad-railsserver
    image: ${IMAGE_REPO}:zammad${VERSION}
    container_name: zammad-nginx
    hostname: zammad-nginx
    links:
      - zammad-railsserver
      - zammad-websocket
    restart: ${RESTART}
    volumes:
      - zammad-data:/opt/zammad
    networks:
     - zammd-network

  zammad-postgresql:
    image: ${IMAGE_REPO}:zammad-postgresql${VERSION}
    container_name: zammad-postgresql
    hostname: zammad-postgresql
    restart: ${RESTART}
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    networks:
     - zammd-network

  zammad-railsserver:
    command: ["zammad-railsserver"]
    container_name: zammad-railsserver
    hostname: zammad-railsserver
    depends_on:
      - zammad-memcached
      - zammad-postgresql
    image: ${IMAGE_REPO}:zammad${VERSION}
    links:
      - zammad-elasticsearch
      - zammad-memcached
      - zammad-postgresql
    restart: ${RESTART}
    volumes:
      - zammad-data:/opt/zammad
    networks:
     - zammd-network

  zammad-scheduler:
    command: ["zammad-scheduler"]
    depends_on:
      - zammad-memcached
      - zammad-railsserver
    image: ${IMAGE_REPO}:zammad${VERSION}
    container_name: zammad-scheduler
    hostname: zammad-scheduler
    links:
      - zammad-elasticsearch
      - zammad-memcached
      - zammad-postgresql
    restart: ${RESTART}
    volumes:
      - zammad-data:/opt/zammad
    networks:
     - zammd-network

  zammad-websocket:
    command: ["zammad-websocket"]
    depends_on:
      - zammad-memcached
      - zammad-railsserver
    image: ${IMAGE_REPO}:zammad${VERSION}
    container_name: zammad-websocket
    hostname: zammad-websocket
    links:
      - zammad-postgresql
      - zammad-memcached
    restart: ${RESTART}
    volumes:
      - zammad-data:/opt/zammad
    networks:
     - zammd-network

volumes:
  elasticsearch-data:
    driver: local
  postgresql-data:
    driver: local
  zammad-backup:
    driver: local
  zammad-data:
    driver: local

networks:
  zammd-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-zammd
    ipam:
      driver: default
      config:
        - subnet: 172.26.1.0/24
